#============================================================= -*-Perl-*-
#
# Jemplate::Grammar
#
# DESCRIPTION
#   Grammar file for the Template Toolkit language containing token
#   definitions and parser state/rules tables generated by Parse::Yapp.
#
# AUTHOR
#   Ingy döt Net   <ingy@cpan.org>
#
# ORIGINAL AUTHOR
#   Andy Wardley   <abw@kfs.org>
#
# COPYRIGHT
#   Copyright (C) 2006 Ingy döt Net.  All Rights Reserved.
#   Copyright (C) 1996-2000 Andy Wardley.  All Rights Reserved.
#   Copyright (C) 1998-2000 Canon Research Centre Europe Ltd.
#
#   This module is free software; you can redistribute it and/or
#   modify it under the same terms as Perl itself.
#
#------------------------------------------------------------------------
#
# NOTE: this module is constructed from the parser/Grammar.pm.skel
# file by running the parser/yc script.  You only need to do this if 
# you have modified the grammar in the parser/Parser.yp file and need
# to-recompile it.  See the README in the 'parser' directory for more
# information (sub-directory of the Jemplate distribution).
#
#========================================================================

package Jemplate::Grammar;

require 5.004;

use strict;
use vars qw( $VERSION );

$VERSION  = sprintf("%d.%02d", q$Revision: 2.10 $ =~ /(\d+)\.(\d+)/);

my (@RESERVED, %CMPOP, $LEXTABLE, $RULES, $STATES);
my ($factory, $rawstart);


#========================================================================
# Reserved words, comparison and binary operators
#========================================================================

@RESERVED = qw( 
	GET CALL SET DEFAULT INSERT INCLUDE PROCESS WRAPPER BLOCK END
	USE PLUGIN FILTER MACRO JAVASCRIPT PERL RAWPERL TO STEP AND OR NOT DIV MOD
	IF UNLESS ELSE ELSIF FOR NEXT WHILE SWITCH CASE META IN
	TRY THROW CATCH FINAL LAST RETURN STOP CLEAR VIEW DEBUG
    );

# for historical reasons, != and == are converted to ne and eq to perform 
# stringwise comparison (mainly because it doesn't generate "non-numerical 
# comparison" warnings which != and == can) but the others (e.g. < > <= >=)
# are not converted to their stringwise equivalents.  I added 'gt' et al, 
# briefly for v2.04d and then took them out again in 2.04e.

%CMPOP = qw( 
    != ne
    == eq
    <  <
    >  >
    >= >=
    <= <=
);


#========================================================================
# Lexer Token Table
#========================================================================

# lookup table used by lexer is initialised with special-cases
$LEXTABLE = {
    'FOREACH' => 'FOR',
    'BREAK'   => 'LAST',
    '&&'      => 'AND',
    '||'      => 'OR',
    '!'       => 'NOT',
    '|'	      => 'FILTER',
    '.'       => 'DOT',
    '_'       => 'CAT',
    '..'      => 'TO',
#    ':'       => 'MACRO',
    '='       => 'ASSIGN',
    '=>'      => 'ASSIGN',
#    '->'      => 'ARROW',
    ','       => 'COMMA',
    '\\'      => 'REF',
    'and'     => 'AND',		# explicitly specified so that qw( and or
    'or'      => 'OR',		# not ) can always be used in lower case, 
    'not'     => 'NOT',		# regardless of ANYCASE flag
    'mod'     => 'MOD',
    'div'     => 'DIV',
};

# localise the temporary variables needed to complete lexer table
{ 
#    my @tokens = qw< ( ) [ ] { } ${ $ / ; : ? >;
    my @tokens = qw< ( ) [ ] { } ${ $ + / ; : ? >;
    my @cmpop  = keys %CMPOP;
#    my @binop  = qw( + - * % );              # '/' above, in @tokens
    my @binop  = qw( - * % );              # '+' and '/' above, in @tokens

    # fill lexer table, slice by slice, with reserved words and operators
    @$LEXTABLE{ @RESERVED, @cmpop, @binop, @tokens } 
	= ( @RESERVED, ('CMPOP') x @cmpop, ('BINOP') x @binop, @tokens );
}


#========================================================================
# CLASS METHODS
#========================================================================

sub new {
    my $class = shift;
    bless {
	LEXTABLE => $LEXTABLE,
	STATES   => $STATES,
	RULES    => $RULES,
    }, $class;
}

# update method to set package-scoped $factory lexical 
sub install_factory {
    my ($self, $new_factory) = @_;
    $factory = $new_factory;
}


#========================================================================
# States
#========================================================================

$STATES = [
	{#State 0
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 4,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			"[" => 10,
			'TRY' => 11,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 54,
			'SWITCH' => 55,
			'MACRO' => 19,
			'JAVASCRIPT' => 56,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 69,
			'BLOCK' => 29,
			'DEFAULT' => 71,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'javascript' => 3,
			'loop' => 5,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'template' => 53,
			'defblockname' => 15,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 70,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 72,
			'try' => 36,
			'switch' => 35,
			'directive' => 73,
			'block' => 74,
			'condition' => 75
		}
	},
	{#State 1
		ACTIONS => {
			"\$" => 44,
			'LITERAL' => 77,
			'IDENT' => 2,
			"\${" => 38
		},
		GOTOS => {
			'setlist' => 78,
			'item' => 40,
			'assign' => 20,
			'node' => 24,
			'ident' => 76
		}
	},
	{#State 2
		DEFAULT => -133
	},
	{#State 3
		DEFAULT => -25
	},
	{#State 4
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 54,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 81,
			'sterm' => 70,
			'item' => 40,
			'node' => 24,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 5
		DEFAULT => -23
	},
	{#State 6
		ACTIONS => {
			";" => 82
		}
	},
	{#State 7
		DEFAULT => -38
	},
	{#State 8
		DEFAULT => -14
	},
	{#State 9
		ACTIONS => {
			"\"" => 91,
			"\$" => 88,
			'LITERAL' => 90,
			'FILENAME' => 85,
			'IDENT' => 83,
			'NUMBER' => 86
		},
		GOTOS => {
			'filepart' => 89,
			'names' => 93,
			'nameargs' => 92,
			'filename' => 87,
			'name' => 84
		}
	},
	{#State 10
		ACTIONS => {
			"{" => 31,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"]" => 96,
			"\${" => 38
		},
		GOTOS => {
			'sterm' => 98,
			'item' => 40,
			'range' => 95,
			'node' => 24,
			'ident' => 79,
			'term' => 97,
			'lterm' => 58,
			'list' => 94
		}
	},
	{#State 11
		ACTIONS => {
			";" => 99
		}
	},
	{#State 12
		DEFAULT => -5
	},
	{#State 13
		ACTIONS => {
			";" => -20
		},
		DEFAULT => -28
	},
	{#State 14
		DEFAULT => -81,
		GOTOS => {
			'@6-1' => 100
		}
	},
	{#State 15
		ACTIONS => {
			'IDENT' => 101
		},
		DEFAULT => -90,
		GOTOS => {
			'blockargs' => 104,
			'metadata' => 103,
			'meta' => 102
		}
	},
	{#State 16
		ACTIONS => {
			'IDENT' => 101
		},
		GOTOS => {
			'metadata' => 105,
			'meta' => 102
		}
	},
	{#State 17
		ACTIONS => {
			'DOT' => 106,
			'ASSIGN' => 107
		},
		DEFAULT => -112
	},
	{#State 18
		ACTIONS => {
			"\"" => 91,
			"\$" => 88,
			'LITERAL' => 90,
			'FILENAME' => 85,
			'IDENT' => 83,
			'NUMBER' => 86
		},
		GOTOS => {
			'filepart' => 89,
			'names' => 93,
			'nameargs' => 108,
			'filename' => 87,
			'name' => 84
		}
	},
	{#State 19
		ACTIONS => {
			'IDENT' => 109
		}
	},
	{#State 20
		DEFAULT => -152
	},
	{#State 21
		DEFAULT => -12
	},
	{#State 22
		ACTIONS => {
			"{" => 31,
			'LITERAL' => 80,
			'IDENT' => 110,
			"\"" => 62,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'sterm' => 70,
			'item' => 40,
			'loopvar' => 112,
			'node' => 24,
			'ident' => 79,
			'term' => 111,
			'lterm' => 58
		}
	},
	{#State 23
		DEFAULT => -41
	},
	{#State 24
		DEFAULT => -130
	},
	{#State 25
		DEFAULT => -6
	},
	{#State 26
		ACTIONS => {
			"\"" => 119,
			"\$" => 116,
			'LITERAL' => 118,
			'FILENAME' => 85,
			'IDENT' => 113,
			'NUMBER' => 86,
			"\${" => 38
		},
		GOTOS => {
			'names' => 93,
			'lvalue' => 114,
			'item' => 115,
			'name' => 84,
			'filepart' => 89,
			'filename' => 87,
			'nameargs' => 120,
			'lnameargs' => 117
		}
	},
	{#State 27
		DEFAULT => -116
	},
	{#State 28
		ACTIONS => {
			"\$" => 44,
			'IDENT' => 2,
			"\${" => 38
		},
		GOTOS => {
			'item' => 40,
			'node' => 24,
			'ident' => 121
		}
	},
	{#State 29
		ACTIONS => {
			'LITERAL' => 126,
			'FILENAME' => 85,
			'IDENT' => 122,
			'NUMBER' => 86
		},
		DEFAULT => -90,
		GOTOS => {
			'blockargs' => 125,
			'filepart' => 89,
			'filename' => 124,
			'blockname' => 123,
			'metadata' => 103,
			'meta' => 102
		}
	},
	{#State 30
		DEFAULT => -44
	},
	{#State 31
		ACTIONS => {
			"\$" => 44,
			'LITERAL' => 131,
			'IDENT' => 2,
			"\${" => 38
		},
		DEFAULT => -122,
		GOTOS => {
			'params' => 130,
			'hash' => 127,
			'item' => 128,
			'param' => 129
		}
	},
	{#State 32
		DEFAULT => -26
	},
	{#State 33
		ACTIONS => {
			"\"" => 119,
			"\$" => 116,
			'LITERAL' => 118,
			'FILENAME' => 85,
			'IDENT' => 113,
			'NUMBER' => 86,
			"\${" => 38
		},
		GOTOS => {
			'names' => 93,
			'lvalue' => 114,
			'item' => 115,
			'name' => 84,
			'filepart' => 89,
			'filename' => 87,
			'nameargs' => 120,
			'lnameargs' => 132
		}
	},
	{#State 34
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 4,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			"[" => 10,
			'TRY' => 11,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 54,
			'SWITCH' => 55,
			'MACRO' => 19,
			'JAVASCRIPT' => 56,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 69,
			'BLOCK' => 29,
			'DEFAULT' => 71,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -2,
		GOTOS => {
			'item' => 40,
			'javascript' => 3,
			'node' => 24,
			'rawperl' => 61,
			'term' => 60,
			'loop' => 5,
			'use' => 65,
			'expr' => 64,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 133,
			'defblock' => 68,
			'atomdir' => 13,
			'anonblock' => 51,
			'sterm' => 70,
			'defblockname' => 15,
			'filter' => 30,
			'ident' => 17,
			'perl' => 32,
			'setlist' => 72,
			'try' => 36,
			'switch' => 35,
			'assign' => 20,
			'directive' => 73,
			'macro' => 21,
			'condition' => 75,
			'lterm' => 58
		}
	},
	{#State 35
		DEFAULT => -22
	},
	{#State 36
		DEFAULT => -24
	},
	{#State 37
		ACTIONS => {
			"\"" => 91,
			"\$" => 88,
			'LITERAL' => 90,
			'FILENAME' => 85,
			'IDENT' => 83,
			'NUMBER' => 86
		},
		GOTOS => {
			'filepart' => 89,
			'names' => 93,
			'nameargs' => 134,
			'filename' => 87,
			'name' => 84
		}
	},
	{#State 38
		ACTIONS => {
			"\"" => 62,
			"\$" => 44,
			'LITERAL' => 80,
			'IDENT' => 2,
			'REF' => 28,
			'NUMBER' => 27,
			"\${" => 38
		},
		GOTOS => {
			'sterm' => 135,
			'item' => 40,
			'node' => 24,
			'ident' => 79
		}
	},
	{#State 39
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 54,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 136,
			'sterm' => 70,
			'item' => 40,
			'node' => 24,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 40
		ACTIONS => {
			"(" => 137
		},
		DEFAULT => -131
	},
	{#State 41
		ACTIONS => {
			";" => 138
		}
	},
	{#State 42
		DEFAULT => -39
	},
	{#State 43
		DEFAULT => -11
	},
	{#State 44
		ACTIONS => {
			'IDENT' => 139
		}
	},
	{#State 45
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 54,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 140,
			'sterm' => 70,
			'item' => 40,
			'node' => 24,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 46
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 54,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 141,
			'sterm' => 70,
			'item' => 40,
			'node' => 24,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 47
		DEFAULT => -43
	},
	{#State 48
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 54,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 142,
			'sterm' => 70,
			'item' => 40,
			'node' => 24,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 49
		ACTIONS => {
			'IF' => 146,
			'FILTER' => 145,
			'FOR' => 144,
			'WHILE' => 148,
			'WRAPPER' => 147,
			'UNLESS' => 143
		}
	},
	{#State 50
		DEFAULT => -40
	},
	{#State 51
		DEFAULT => -10
	},
	{#State 52
		ACTIONS => {
			"\"" => 91,
			"\$" => 88,
			'LITERAL' => 90,
			'FILENAME' => 85,
			'IDENT' => 83,
			'NUMBER' => 86
		},
		GOTOS => {
			'filepart' => 89,
			'names' => 93,
			'nameargs' => 149,
			'filename' => 87,
			'name' => 84
		}
	},
	{#State 53
		ACTIONS => {
			'' => 150
		}
	},
	{#State 54
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 59,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 54,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 153,
			'sterm' => 70,
			'item' => 40,
			'assign' => 152,
			'node' => 24,
			'ident' => 151,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 55
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 54,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 154,
			'sterm' => 70,
			'item' => 40,
			'node' => 24,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 56
		ACTIONS => {
			";" => 155
		}
	},
	{#State 57
		ACTIONS => {
			"\"" => 91,
			"\$" => 88,
			'LITERAL' => 90,
			'FILENAME' => 85,
			'IDENT' => 83,
			'NUMBER' => 86
		},
		GOTOS => {
			'filepart' => 89,
			'names' => 93,
			'nameargs' => 156,
			'filename' => 87,
			'name' => 84
		}
	},
	{#State 58
		DEFAULT => -106
	},
	{#State 59
		ACTIONS => {
			'ASSIGN' => 157
		},
		DEFAULT => -115
	},
	{#State 60
		DEFAULT => -149
	},
	{#State 61
		DEFAULT => -15
	},
	{#State 62
		DEFAULT => -179,
		GOTOS => {
			'quoted' => 158
		}
	},
	{#State 63
		ACTIONS => {
			"\"" => 91,
			"\$" => 88,
			'LITERAL' => 90,
			'FILENAME' => 85,
			'IDENT' => 83,
			'NUMBER' => 86
		},
		GOTOS => {
			'filepart' => 89,
			'names' => 93,
			'nameargs' => 159,
			'filename' => 87,
			'name' => 84
		}
	},
	{#State 64
		ACTIONS => {
			";" => -16,
			"+" => 160,
			'CAT' => 166,
			'CMPOP' => 167,
			"?" => 161,
			'DIV' => 162,
			'MOD' => 168,
			"/" => 169,
			'AND' => 163,
			'BINOP' => 164,
			'OR' => 165
		},
		DEFAULT => -27
	},
	{#State 65
		DEFAULT => -13
	},
	{#State 66
		DEFAULT => -37
	},
	{#State 67
		ACTIONS => {
			"\"" => 91,
			"\$" => 88,
			'LITERAL' => 90,
			'FILENAME' => 85,
			'IDENT' => 83,
			'NUMBER' => 86
		},
		GOTOS => {
			'filepart' => 89,
			'names' => 93,
			'nameargs' => 170,
			'filename' => 87,
			'name' => 84
		}
	},
	{#State 68
		DEFAULT => -9
	},
	{#State 69
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 54,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 171,
			'sterm' => 70,
			'item' => 40,
			'node' => 24,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 70
		DEFAULT => -107
	},
	{#State 71
		ACTIONS => {
			"\$" => 44,
			'LITERAL' => 77,
			'IDENT' => 2,
			"\${" => 38
		},
		GOTOS => {
			'setlist' => 172,
			'item' => 40,
			'assign' => 20,
			'node' => 24,
			'ident' => 76
		}
	},
	{#State 72
		ACTIONS => {
			"\$" => 44,
			'COMMA' => 174,
			'LITERAL' => 77,
			'IDENT' => 2,
			"\${" => 38
		},
		DEFAULT => -19,
		GOTOS => {
			'item' => 40,
			'assign' => 173,
			'node' => 24,
			'ident' => 76
		}
	},
	{#State 73
		DEFAULT => -8
	},
	{#State 74
		DEFAULT => -1
	},
	{#State 75
		DEFAULT => -21
	},
	{#State 76
		ACTIONS => {
			'ASSIGN' => 175,
			'DOT' => 106
		}
	},
	{#State 77
		ACTIONS => {
			'ASSIGN' => 157
		}
	},
	{#State 78
		ACTIONS => {
			'COMMA' => 174,
			'LITERAL' => 77,
			'IDENT' => 2,
			"\$" => 44,
			"\${" => 38
		},
		DEFAULT => -31,
		GOTOS => {
			'item' => 40,
			'assign' => 173,
			'node' => 24,
			'ident' => 76
		}
	},
	{#State 79
		ACTIONS => {
			'DOT' => 106
		},
		DEFAULT => -112
	},
	{#State 80
		DEFAULT => -115
	},
	{#State 81
		ACTIONS => {
			'CMPOP' => 167,
			"?" => 161,
			";" => 176,
			"+" => 160,
			'MOD' => 168,
			'DIV' => 162,
			"/" => 169,
			'AND' => 163,
			'CAT' => 166,
			'BINOP' => 164,
			'OR' => 165
		}
	},
	{#State 82
		DEFAULT => -7
	},
	{#State 83
		DEFAULT => -176
	},
	{#State 84
		DEFAULT => -169
	},
	{#State 85
		DEFAULT => -175
	},
	{#State 86
		DEFAULT => -177
	},
	{#State 87
		ACTIONS => {
			'DOT' => 177
		},
		DEFAULT => -171
	},
	{#State 88
		ACTIONS => {
			"\$" => 44,
			'IDENT' => 2,
			"\${" => 38
		},
		GOTOS => {
			'item' => 40,
			'node' => 24,
			'ident' => 178
		}
	},
	{#State 89
		DEFAULT => -174
	},
	{#State 90
		DEFAULT => -172
	},
	{#State 91
		DEFAULT => -179,
		GOTOS => {
			'quoted' => 179
		}
	},
	{#State 92
		DEFAULT => -36
	},
	{#State 93
		ACTIONS => {
			"+" => 180,
			"(" => 181
		},
		DEFAULT => -159,
		GOTOS => {
			'args' => 182
		}
	},
	{#State 94
		ACTIONS => {
			"{" => 31,
			'COMMA' => 185,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"]" => 183,
			"\${" => 38
		},
		GOTOS => {
			'sterm' => 70,
			'item' => 40,
			'node' => 24,
			'ident' => 79,
			'term' => 184,
			'lterm' => 58
		}
	},
	{#State 95
		ACTIONS => {
			"]" => 186
		}
	},
	{#State 96
		DEFAULT => -110
	},
	{#State 97
		DEFAULT => -119
	},
	{#State 98
		ACTIONS => {
			'TO' => 187
		},
		DEFAULT => -107
	},
	{#State 99
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 4,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			"[" => 10,
			'TRY' => 11,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 54,
			'SWITCH' => 55,
			'MACRO' => 19,
			'JAVASCRIPT' => 56,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 69,
			'BLOCK' => 29,
			'DEFAULT' => 71,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'javascript' => 3,
			'loop' => 5,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'defblockname' => 15,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 70,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 72,
			'switch' => 35,
			'try' => 36,
			'directive' => 73,
			'block' => 188,
			'condition' => 75
		}
	},
	{#State 100
		ACTIONS => {
			";" => 189
		}
	},
	{#State 101
		ACTIONS => {
			'ASSIGN' => 190
		}
	},
	{#State 102
		DEFAULT => -102
	},
	{#State 103
		ACTIONS => {
			'COMMA' => 192,
			'IDENT' => 101
		},
		DEFAULT => -89,
		GOTOS => {
			'meta' => 191
		}
	},
	{#State 104
		ACTIONS => {
			";" => 193
		}
	},
	{#State 105
		ACTIONS => {
			'COMMA' => 192,
			'IDENT' => 101
		},
		DEFAULT => -17,
		GOTOS => {
			'meta' => 191
		}
	},
	{#State 106
		ACTIONS => {
			"\$" => 44,
			'IDENT' => 2,
			'NUMBER' => 195,
			"\${" => 38
		},
		GOTOS => {
			'item' => 40,
			'node' => 194
		}
	},
	{#State 107
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 4,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			"[" => 10,
			'TRY' => 11,
			'LAST' => 50,
			'DEBUG' => 52,
			'INCLUDE' => 18,
			"(" => 54,
			'SWITCH' => 55,
			'JAVASCRIPT' => 56,
			'WRAPPER' => 57,
			'FOR' => 22,
			'NEXT' => 23,
			'LITERAL' => 59,
			"\"" => 62,
			'PROCESS' => 63,
			'FILTER' => 26,
			'RETURN' => 66,
			'INSERT' => 67,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 69,
			'BLOCK' => 196,
			'DEFAULT' => 71,
			"{" => 31,
			"\${" => 38
		},
		GOTOS => {
			'item' => 40,
			'javascript' => 3,
			'node' => 24,
			'term' => 60,
			'loop' => 5,
			'expr' => 198,
			'wrapper' => 47,
			'atomexpr' => 49,
			'atomdir' => 13,
			'mdir' => 197,
			'sterm' => 70,
			'filter' => 30,
			'ident' => 151,
			'perl' => 32,
			'setlist' => 72,
			'try' => 36,
			'switch' => 35,
			'assign' => 20,
			'directive' => 199,
			'condition' => 75,
			'lterm' => 58
		}
	},
	{#State 108
		DEFAULT => -34
	},
	{#State 109
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 4,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			"[" => 10,
			'TRY' => 11,
			'LAST' => 50,
			'DEBUG' => 52,
			'INCLUDE' => 18,
			"(" => 201,
			'SWITCH' => 55,
			'JAVASCRIPT' => 56,
			'WRAPPER' => 57,
			'FOR' => 22,
			'NEXT' => 23,
			'LITERAL' => 59,
			"\"" => 62,
			'PROCESS' => 63,
			'FILTER' => 26,
			'RETURN' => 66,
			'INSERT' => 67,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 69,
			'BLOCK' => 196,
			'DEFAULT' => 71,
			"{" => 31,
			"\${" => 38
		},
		GOTOS => {
			'item' => 40,
			'javascript' => 3,
			'node' => 24,
			'term' => 60,
			'loop' => 5,
			'expr' => 202,
			'wrapper' => 47,
			'atomexpr' => 49,
			'atomdir' => 13,
			'mdir' => 200,
			'sterm' => 70,
			'filter' => 30,
			'ident' => 151,
			'perl' => 32,
			'setlist' => 72,
			'try' => 36,
			'switch' => 35,
			'assign' => 20,
			'directive' => 199,
			'condition' => 75,
			'lterm' => 58
		}
	},
	{#State 110
		ACTIONS => {
			'IN' => 204,
			'ASSIGN' => 203
		},
		DEFAULT => -133
	},
	{#State 111
		DEFAULT => -159,
		GOTOS => {
			'args' => 205
		}
	},
	{#State 112
		ACTIONS => {
			";" => 206
		}
	},
	{#State 113
		ACTIONS => {
			'ASSIGN' => -133
		},
		DEFAULT => -176
	},
	{#State 114
		ACTIONS => {
			'ASSIGN' => 207
		}
	},
	{#State 115
		DEFAULT => -162
	},
	{#State 116
		ACTIONS => {
			"\$" => 44,
			'IDENT' => 208,
			"\${" => 38
		},
		GOTOS => {
			'item' => 40,
			'node' => 24,
			'ident' => 178
		}
	},
	{#State 117
		ACTIONS => {
			";" => 209
		}
	},
	{#State 118
		ACTIONS => {
			'ASSIGN' => -164
		},
		DEFAULT => -172
	},
	{#State 119
		DEFAULT => -179,
		GOTOS => {
			'quoted' => 210
		}
	},
	{#State 120
		DEFAULT => -161
	},
	{#State 121
		ACTIONS => {
			'DOT' => 106
		},
		DEFAULT => -113
	},
	{#State 122
		ACTIONS => {
			'ASSIGN' => 190
		},
		DEFAULT => -176
	},
	{#State 123
		DEFAULT => -86
	},
	{#State 124
		ACTIONS => {
			'DOT' => 177
		},
		DEFAULT => -87
	},
	{#State 125
		ACTIONS => {
			";" => 211
		}
	},
	{#State 126
		DEFAULT => -88
	},
	{#State 127
		ACTIONS => {
			"}" => 212
		}
	},
	{#State 128
		ACTIONS => {
			'ASSIGN' => 213
		}
	},
	{#State 129
		DEFAULT => -125
	},
	{#State 130
		ACTIONS => {
			"\$" => 44,
			'COMMA' => 215,
			'LITERAL' => 131,
			'IDENT' => 2,
			"\${" => 38
		},
		DEFAULT => -121,
		GOTOS => {
			'item' => 128,
			'param' => 214
		}
	},
	{#State 131
		ACTIONS => {
			'ASSIGN' => 216
		}
	},
	{#State 132
		DEFAULT => -74
	},
	{#State 133
		DEFAULT => -4
	},
	{#State 134
		ACTIONS => {
			";" => 217
		}
	},
	{#State 135
		ACTIONS => {
			"}" => 218
		}
	},
	{#State 136
		ACTIONS => {
			"+" => 160,
			'CAT' => 166,
			'CMPOP' => 167,
			'DIV' => 162,
			'MOD' => 168,
			"/" => 169,
			'BINOP' => 164
		},
		DEFAULT => -145
	},
	{#State 137
		DEFAULT => -159,
		GOTOS => {
			'args' => 219
		}
	},
	{#State 138
		DEFAULT => -79,
		GOTOS => {
			'@5-2' => 220
		}
	},
	{#State 139
		DEFAULT => -135
	},
	{#State 140
		ACTIONS => {
			'CMPOP' => 167,
			"?" => 161,
			";" => 221,
			"+" => 160,
			'MOD' => 168,
			'DIV' => 162,
			"/" => 169,
			'AND' => 163,
			'CAT' => 166,
			'BINOP' => 164,
			'OR' => 165
		}
	},
	{#State 141
		ACTIONS => {
			"+" => 160,
			'CAT' => 166,
			'CMPOP' => 167,
			"?" => 161,
			'DIV' => 162,
			'MOD' => 168,
			"/" => 169,
			'AND' => 163,
			'BINOP' => 164,
			'OR' => 165
		},
		DEFAULT => -30
	},
	{#State 142
		ACTIONS => {
			"+" => 160,
			'CAT' => 166,
			'CMPOP' => 167,
			"?" => 161,
			'DIV' => 162,
			'MOD' => 168,
			"/" => 169,
			'AND' => 163,
			'BINOP' => 164,
			'OR' => 165
		},
		DEFAULT => -29
	},
	{#State 143
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 54,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 222,
			'sterm' => 70,
			'item' => 40,
			'node' => 24,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 144
		ACTIONS => {
			"{" => 31,
			'LITERAL' => 80,
			'IDENT' => 110,
			"\"" => 62,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'sterm' => 70,
			'item' => 40,
			'loopvar' => 223,
			'node' => 24,
			'ident' => 79,
			'term' => 111,
			'lterm' => 58
		}
	},
	{#State 145
		ACTIONS => {
			"\"" => 119,
			"\$" => 116,
			'LITERAL' => 118,
			'FILENAME' => 85,
			'IDENT' => 113,
			'NUMBER' => 86,
			"\${" => 38
		},
		GOTOS => {
			'names' => 93,
			'lvalue' => 114,
			'item' => 115,
			'name' => 84,
			'filepart' => 89,
			'filename' => 87,
			'nameargs' => 120,
			'lnameargs' => 224
		}
	},
	{#State 146
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 54,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 225,
			'sterm' => 70,
			'item' => 40,
			'node' => 24,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 147
		ACTIONS => {
			"\"" => 91,
			"\$" => 88,
			'LITERAL' => 90,
			'FILENAME' => 85,
			'IDENT' => 83,
			'NUMBER' => 86
		},
		GOTOS => {
			'filepart' => 89,
			'names' => 93,
			'nameargs' => 226,
			'filename' => 87,
			'name' => 84
		}
	},
	{#State 148
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 54,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 227,
			'sterm' => 70,
			'item' => 40,
			'node' => 24,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 149
		DEFAULT => -42
	},
	{#State 150
		DEFAULT => 0
	},
	{#State 151
		ACTIONS => {
			'DOT' => 106,
			'ASSIGN' => 175
		},
		DEFAULT => -112
	},
	{#State 152
		ACTIONS => {
			")" => 228
		}
	},
	{#State 153
		ACTIONS => {
			'CMPOP' => 167,
			"?" => 161,
			"+" => 160,
			'MOD' => 168,
			'DIV' => 162,
			"/" => 169,
			'AND' => 163,
			'CAT' => 166,
			'BINOP' => 164,
			")" => 229,
			'OR' => 165
		}
	},
	{#State 154
		ACTIONS => {
			'CMPOP' => 167,
			"?" => 161,
			";" => 230,
			"+" => 160,
			'MOD' => 168,
			'DIV' => 162,
			"/" => 169,
			'AND' => 163,
			'CAT' => 166,
			'BINOP' => 164,
			'OR' => 165
		}
	},
	{#State 155
		DEFAULT => -77,
		GOTOS => {
			'@4-2' => 231
		}
	},
	{#State 156
		ACTIONS => {
			";" => 232
		}
	},
	{#State 157
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 54,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 233,
			'sterm' => 70,
			'item' => 40,
			'node' => 24,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 158
		ACTIONS => {
			"\"" => 238,
			'TEXT' => 235,
			";" => 237,
			"\$" => 44,
			'IDENT' => 2,
			"\${" => 38
		},
		GOTOS => {
			'item' => 40,
			'node' => 24,
			'ident' => 234,
			'quotable' => 236
		}
	},
	{#State 159
		DEFAULT => -35
	},
	{#State 160
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 54,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 239,
			'sterm' => 70,
			'item' => 40,
			'node' => 24,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 161
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 54,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 240,
			'sterm' => 70,
			'item' => 40,
			'node' => 24,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 162
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 54,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 241,
			'sterm' => 70,
			'item' => 40,
			'node' => 24,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 163
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 54,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 242,
			'sterm' => 70,
			'item' => 40,
			'node' => 24,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 164
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 54,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 243,
			'sterm' => 70,
			'item' => 40,
			'node' => 24,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 165
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 54,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 244,
			'sterm' => 70,
			'item' => 40,
			'node' => 24,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 166
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 54,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 245,
			'sterm' => 70,
			'item' => 40,
			'node' => 24,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 167
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 54,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 246,
			'sterm' => 70,
			'item' => 40,
			'node' => 24,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 168
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 54,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 247,
			'sterm' => 70,
			'item' => 40,
			'node' => 24,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 169
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 54,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 248,
			'sterm' => 70,
			'item' => 40,
			'node' => 24,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 170
		DEFAULT => -33
	},
	{#State 171
		ACTIONS => {
			'CMPOP' => 167,
			"?" => 161,
			";" => 249,
			"+" => 160,
			'MOD' => 168,
			'DIV' => 162,
			"/" => 169,
			'AND' => 163,
			'CAT' => 166,
			'BINOP' => 164,
			'OR' => 165
		}
	},
	{#State 172
		ACTIONS => {
			'COMMA' => 174,
			'LITERAL' => 77,
			'IDENT' => 2,
			"\$" => 44,
			"\${" => 38
		},
		DEFAULT => -32,
		GOTOS => {
			'item' => 40,
			'assign' => 173,
			'node' => 24,
			'ident' => 76
		}
	},
	{#State 173
		DEFAULT => -150
	},
	{#State 174
		DEFAULT => -151
	},
	{#State 175
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 54,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 250,
			'sterm' => 70,
			'item' => 40,
			'node' => 24,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 176
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 4,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			"[" => 10,
			'TRY' => 11,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 54,
			'SWITCH' => 55,
			'MACRO' => 19,
			'JAVASCRIPT' => 56,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 69,
			'BLOCK' => 29,
			'DEFAULT' => 71,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'javascript' => 3,
			'loop' => 5,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'defblockname' => 15,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 70,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 72,
			'switch' => 35,
			'try' => 36,
			'directive' => 73,
			'block' => 251,
			'condition' => 75
		}
	},
	{#State 177
		ACTIONS => {
			'FILENAME' => 85,
			'IDENT' => 83,
			'NUMBER' => 86
		},
		GOTOS => {
			'filepart' => 252
		}
	},
	{#State 178
		ACTIONS => {
			'DOT' => 106
		},
		DEFAULT => -159,
		GOTOS => {
			'args' => 253
		}
	},
	{#State 179
		ACTIONS => {
			"\"" => 254,
			'TEXT' => 235,
			";" => 237,
			"\$" => 44,
			'IDENT' => 2,
			"\${" => 38
		},
		GOTOS => {
			'item' => 40,
			'node' => 24,
			'ident' => 234,
			'quotable' => 236
		}
	},
	{#State 180
		ACTIONS => {
			"\"" => 91,
			'LITERAL' => 90,
			'FILENAME' => 85,
			'IDENT' => 83,
			'NUMBER' => 86
		},
		GOTOS => {
			'filepart' => 89,
			'filename' => 87,
			'name' => 255
		}
	},
	{#State 181
		DEFAULT => -159,
		GOTOS => {
			'args' => 256
		}
	},
	{#State 182
		ACTIONS => {
			'LITERAL' => 260,
			'IDENT' => 2,
			"\"" => 62,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"{" => 31,
			'COMMA' => 262,
			"\${" => 38
		},
		DEFAULT => -166,
		GOTOS => {
			'sterm' => 70,
			'item' => 258,
			'param' => 259,
			'node' => 24,
			'ident' => 257,
			'term' => 261,
			'lterm' => 58
		}
	},
	{#State 183
		DEFAULT => -108
	},
	{#State 184
		DEFAULT => -117
	},
	{#State 185
		DEFAULT => -118
	},
	{#State 186
		DEFAULT => -109
	},
	{#State 187
		ACTIONS => {
			"\"" => 62,
			"\$" => 44,
			'LITERAL' => 80,
			'IDENT' => 2,
			'REF' => 28,
			'NUMBER' => 27,
			"\${" => 38
		},
		GOTOS => {
			'sterm' => 263,
			'item' => 40,
			'node' => 24,
			'ident' => 79
		}
	},
	{#State 188
		ACTIONS => {
			'FINAL' => 264,
			'CATCH' => 266
		},
		DEFAULT => -73,
		GOTOS => {
			'final' => 265
		}
	},
	{#State 189
		ACTIONS => {
			'TEXT' => 267
		}
	},
	{#State 190
		ACTIONS => {
			"\"" => 270,
			'LITERAL' => 269,
			'NUMBER' => 268
		}
	},
	{#State 191
		DEFAULT => -100
	},
	{#State 192
		DEFAULT => -101
	},
	{#State 193
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 4,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			"[" => 10,
			'TRY' => 11,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 54,
			'SWITCH' => 55,
			'MACRO' => 19,
			'JAVASCRIPT' => 56,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 69,
			'BLOCK' => 29,
			'DEFAULT' => 71,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'javascript' => 3,
			'loop' => 5,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'template' => 271,
			'defblockname' => 15,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 70,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 72,
			'switch' => 35,
			'try' => 36,
			'directive' => 73,
			'block' => 74,
			'condition' => 75
		}
	},
	{#State 194
		DEFAULT => -128
	},
	{#State 195
		DEFAULT => -129
	},
	{#State 196
		ACTIONS => {
			";" => 272
		}
	},
	{#State 197
		DEFAULT => -92
	},
	{#State 198
		ACTIONS => {
			";" => -153,
			"+" => 160,
			'LITERAL' => -153,
			'IDENT' => -153,
			'CAT' => 166,
			"\$" => -153,
			'CMPOP' => 167,
			"?" => 161,
			'DIV' => 162,
			'MOD' => 168,
			'COMMA' => -153,
			"/" => 169,
			'AND' => 163,
			'BINOP' => 164,
			'OR' => 165,
			"\${" => -153
		},
		DEFAULT => -27
	},
	{#State 199
		DEFAULT => -95
	},
	{#State 200
		DEFAULT => -94
	},
	{#State 201
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 59,
			'IDENT' => 273,
			"\"" => 62,
			"(" => 54,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 153,
			'sterm' => 70,
			'item' => 40,
			'assign' => 152,
			'margs' => 274,
			'node' => 24,
			'ident' => 151,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 202
		ACTIONS => {
			"+" => 160,
			'CAT' => 166,
			'CMPOP' => 167,
			"?" => 161,
			'DIV' => 162,
			'MOD' => 168,
			"/" => 169,
			'AND' => 163,
			'BINOP' => 164,
			'OR' => 165
		},
		DEFAULT => -27
	},
	{#State 203
		ACTIONS => {
			"{" => 31,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'sterm' => 70,
			'item' => 40,
			'node' => 24,
			'ident' => 79,
			'term' => 275,
			'lterm' => 58
		}
	},
	{#State 204
		ACTIONS => {
			"{" => 31,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'sterm' => 70,
			'item' => 40,
			'node' => 24,
			'ident' => 79,
			'term' => 276,
			'lterm' => 58
		}
	},
	{#State 205
		ACTIONS => {
			"{" => 31,
			'COMMA' => 262,
			'LITERAL' => 260,
			'IDENT' => 2,
			"\"" => 62,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		DEFAULT => -65,
		GOTOS => {
			'sterm' => 70,
			'item' => 258,
			'param' => 259,
			'node' => 24,
			'ident' => 257,
			'term' => 261,
			'lterm' => 58
		}
	},
	{#State 206
		DEFAULT => -57,
		GOTOS => {
			'@1-3' => 277
		}
	},
	{#State 207
		ACTIONS => {
			"\"" => 91,
			"\$" => 88,
			'LITERAL' => 90,
			'FILENAME' => 85,
			'IDENT' => 83,
			'NUMBER' => 86
		},
		GOTOS => {
			'filepart' => 89,
			'names' => 93,
			'nameargs' => 278,
			'filename' => 87,
			'name' => 84
		}
	},
	{#State 208
		ACTIONS => {
			'ASSIGN' => -135
		},
		DEFAULT => -133
	},
	{#State 209
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 4,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			"[" => 10,
			'TRY' => 11,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 54,
			'SWITCH' => 55,
			'MACRO' => 19,
			'JAVASCRIPT' => 56,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 69,
			'BLOCK' => 29,
			'DEFAULT' => 71,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'javascript' => 3,
			'loop' => 5,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'defblockname' => 15,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 70,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 72,
			'switch' => 35,
			'try' => 36,
			'directive' => 73,
			'block' => 279,
			'condition' => 75
		}
	},
	{#State 210
		ACTIONS => {
			"\"" => 280,
			'TEXT' => 235,
			";" => 237,
			"\$" => 44,
			'IDENT' => 2,
			"\${" => 38
		},
		GOTOS => {
			'item' => 40,
			'node' => 24,
			'ident' => 234,
			'quotable' => 236
		}
	},
	{#State 211
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 4,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			"[" => 10,
			'TRY' => 11,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 54,
			'SWITCH' => 55,
			'MACRO' => 19,
			'JAVASCRIPT' => 56,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 69,
			'BLOCK' => 29,
			'DEFAULT' => 71,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'javascript' => 3,
			'loop' => 5,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'defblockname' => 15,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 70,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 72,
			'switch' => 35,
			'try' => 36,
			'directive' => 73,
			'block' => 281,
			'condition' => 75
		}
	},
	{#State 212
		DEFAULT => -111
	},
	{#State 213
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 54,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 282,
			'sterm' => 70,
			'item' => 40,
			'node' => 24,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 214
		DEFAULT => -123
	},
	{#State 215
		DEFAULT => -124
	},
	{#State 216
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 54,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 283,
			'sterm' => 70,
			'item' => 40,
			'node' => 24,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 217
		DEFAULT => -75,
		GOTOS => {
			'@3-3' => 284
		}
	},
	{#State 218
		DEFAULT => -134
	},
	{#State 219
		ACTIONS => {
			"{" => 31,
			'COMMA' => 262,
			'LITERAL' => 260,
			'IDENT' => 2,
			"\"" => 62,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			")" => 285,
			"\${" => 38
		},
		GOTOS => {
			'sterm' => 70,
			'item' => 258,
			'param' => 259,
			'node' => 24,
			'ident' => 257,
			'term' => 261,
			'lterm' => 58
		}
	},
	{#State 220
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 4,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			"[" => 10,
			'TRY' => 11,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 54,
			'SWITCH' => 55,
			'MACRO' => 19,
			'JAVASCRIPT' => 56,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 69,
			'BLOCK' => 29,
			'DEFAULT' => 71,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'javascript' => 3,
			'loop' => 5,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'defblockname' => 15,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 70,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 72,
			'switch' => 35,
			'try' => 36,
			'directive' => 73,
			'block' => 286,
			'condition' => 75
		}
	},
	{#State 221
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 4,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			"[" => 10,
			'TRY' => 11,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 54,
			'SWITCH' => 55,
			'MACRO' => 19,
			'JAVASCRIPT' => 56,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 69,
			'BLOCK' => 29,
			'DEFAULT' => 71,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'javascript' => 3,
			'loop' => 5,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'defblockname' => 15,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 70,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 72,
			'switch' => 35,
			'try' => 36,
			'directive' => 73,
			'block' => 287,
			'condition' => 75
		}
	},
	{#State 222
		ACTIONS => {
			'CMPOP' => 167,
			"?" => 161,
			"+" => 160,
			'MOD' => 168,
			'DIV' => 162,
			"/" => 169,
			'AND' => 163,
			'CAT' => 166,
			'BINOP' => 164,
			'OR' => 165
		},
		DEFAULT => -48
	},
	{#State 223
		DEFAULT => -59
	},
	{#State 224
		DEFAULT => -84
	},
	{#State 225
		ACTIONS => {
			'CMPOP' => 167,
			"?" => 161,
			"+" => 160,
			'MOD' => 168,
			'DIV' => 162,
			"/" => 169,
			'AND' => 163,
			'CAT' => 166,
			'BINOP' => 164,
			'OR' => 165
		},
		DEFAULT => -46
	},
	{#State 226
		DEFAULT => -67
	},
	{#State 227
		ACTIONS => {
			'CMPOP' => 167,
			"?" => 161,
			"+" => 160,
			'MOD' => 168,
			'DIV' => 162,
			"/" => 169,
			'AND' => 163,
			'CAT' => 166,
			'BINOP' => 164,
			'OR' => 165
		},
		DEFAULT => -62
	},
	{#State 228
		DEFAULT => -147
	},
	{#State 229
		DEFAULT => -148
	},
	{#State 230
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 4,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			"[" => 10,
			'TRY' => 11,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 54,
			'SWITCH' => 55,
			'MACRO' => 19,
			'JAVASCRIPT' => 56,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 69,
			'BLOCK' => 29,
			'DEFAULT' => 71,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'javascript' => 3,
			'loop' => 5,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'defblockname' => 15,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 70,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 72,
			'switch' => 35,
			'try' => 36,
			'directive' => 73,
			'block' => 288,
			'condition' => 75
		}
	},
	{#State 231
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 4,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			"[" => 10,
			'TRY' => 11,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 54,
			'SWITCH' => 55,
			'MACRO' => 19,
			'JAVASCRIPT' => 56,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 69,
			'BLOCK' => 29,
			'DEFAULT' => 71,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'javascript' => 3,
			'loop' => 5,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'defblockname' => 15,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 70,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 72,
			'switch' => 35,
			'try' => 36,
			'directive' => 73,
			'block' => 289,
			'condition' => 75
		}
	},
	{#State 232
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 4,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			"[" => 10,
			'TRY' => 11,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 54,
			'SWITCH' => 55,
			'MACRO' => 19,
			'JAVASCRIPT' => 56,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 69,
			'BLOCK' => 29,
			'DEFAULT' => 71,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'javascript' => 3,
			'loop' => 5,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'defblockname' => 15,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 70,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 72,
			'switch' => 35,
			'try' => 36,
			'directive' => 73,
			'block' => 290,
			'condition' => 75
		}
	},
	{#State 233
		ACTIONS => {
			"+" => 160,
			'CAT' => 166,
			'CMPOP' => 167,
			"?" => 161,
			'DIV' => 162,
			'MOD' => 168,
			"/" => 169,
			'AND' => 163,
			'BINOP' => 164,
			'OR' => 165
		},
		DEFAULT => -154
	},
	{#State 234
		ACTIONS => {
			'DOT' => 106
		},
		DEFAULT => -180
	},
	{#State 235
		DEFAULT => -181
	},
	{#State 236
		DEFAULT => -178
	},
	{#State 237
		DEFAULT => -182
	},
	{#State 238
		DEFAULT => -114
	},
	{#State 239
		ACTIONS => {
			'DIV' => 162,
			'MOD' => 168,
			"/" => 169
		},
		DEFAULT => -138
	},
	{#State 240
		ACTIONS => {
			":" => 291,
			'CMPOP' => 167,
			"?" => 161,
			"+" => 160,
			'MOD' => 168,
			'DIV' => 162,
			"/" => 169,
			'AND' => 163,
			'CAT' => 166,
			'BINOP' => 164,
			'OR' => 165
		}
	},
	{#State 241
		ACTIONS => {
			'MOD' => 168
		},
		DEFAULT => -139
	},
	{#State 242
		ACTIONS => {
			"+" => 160,
			'CAT' => 166,
			'CMPOP' => 167,
			'DIV' => 162,
			'MOD' => 168,
			"/" => 169,
			'BINOP' => 164
		},
		DEFAULT => -143
	},
	{#State 243
		ACTIONS => {
			"+" => 160,
			'DIV' => 162,
			'MOD' => 168,
			"/" => 169
		},
		DEFAULT => -136
	},
	{#State 244
		ACTIONS => {
			"+" => 160,
			'CAT' => 166,
			'CMPOP' => 167,
			'DIV' => 162,
			'MOD' => 168,
			"/" => 169,
			'BINOP' => 164
		},
		DEFAULT => -144
	},
	{#State 245
		ACTIONS => {
			"+" => 160,
			'CMPOP' => 167,
			'DIV' => 162,
			'MOD' => 168,
			"/" => 169,
			'BINOP' => 164
		},
		DEFAULT => -142
	},
	{#State 246
		ACTIONS => {
			"+" => 160,
			'DIV' => 162,
			'MOD' => 168,
			"/" => 169,
			'BINOP' => 164
		},
		DEFAULT => -141
	},
	{#State 247
		DEFAULT => -140
	},
	{#State 248
		ACTIONS => {
			'DIV' => 162,
			'MOD' => 168
		},
		DEFAULT => -137
	},
	{#State 249
		DEFAULT => -60,
		GOTOS => {
			'@2-3' => 292
		}
	},
	{#State 250
		ACTIONS => {
			"+" => 160,
			'CAT' => 166,
			'CMPOP' => 167,
			"?" => 161,
			'DIV' => 162,
			'MOD' => 168,
			"/" => 169,
			'AND' => 163,
			'BINOP' => 164,
			'OR' => 165
		},
		DEFAULT => -153
	},
	{#State 251
		ACTIONS => {
			'ELSIF' => 295,
			'ELSE' => 293
		},
		DEFAULT => -51,
		GOTOS => {
			'else' => 294
		}
	},
	{#State 252
		DEFAULT => -173
	},
	{#State 253
		ACTIONS => {
			'LITERAL' => 260,
			'IDENT' => 2,
			"\"" => 62,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"{" => 31,
			'COMMA' => 262,
			"\${" => 38
		},
		DEFAULT => -165,
		GOTOS => {
			'sterm' => 70,
			'item' => 258,
			'param' => 259,
			'node' => 24,
			'ident' => 257,
			'term' => 261,
			'lterm' => 58
		}
	},
	{#State 254
		DEFAULT => -170
	},
	{#State 255
		DEFAULT => -168
	},
	{#State 256
		ACTIONS => {
			"{" => 31,
			'COMMA' => 262,
			'LITERAL' => 260,
			'IDENT' => 2,
			"\"" => 62,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			")" => 296,
			"\${" => 38
		},
		GOTOS => {
			'sterm' => 70,
			'item' => 258,
			'param' => 259,
			'node' => 24,
			'ident' => 257,
			'term' => 261,
			'lterm' => 58
		}
	},
	{#State 257
		ACTIONS => {
			'DOT' => 106,
			'ASSIGN' => 297
		},
		DEFAULT => -112
	},
	{#State 258
		ACTIONS => {
			"(" => 137,
			'ASSIGN' => 213
		},
		DEFAULT => -131
	},
	{#State 259
		DEFAULT => -156
	},
	{#State 260
		ACTIONS => {
			'ASSIGN' => 216
		},
		DEFAULT => -115
	},
	{#State 261
		DEFAULT => -155
	},
	{#State 262
		DEFAULT => -158
	},
	{#State 263
		DEFAULT => -120
	},
	{#State 264
		ACTIONS => {
			";" => 298
		}
	},
	{#State 265
		ACTIONS => {
			'END' => 299
		}
	},
	{#State 266
		ACTIONS => {
			";" => 301,
			'DEFAULT' => 302,
			'FILENAME' => 85,
			'IDENT' => 83,
			'NUMBER' => 86
		},
		GOTOS => {
			'filepart' => 89,
			'filename' => 300
		}
	},
	{#State 267
		ACTIONS => {
			'END' => 303
		}
	},
	{#State 268
		DEFAULT => -105
	},
	{#State 269
		DEFAULT => -103
	},
	{#State 270
		ACTIONS => {
			'TEXT' => 304
		}
	},
	{#State 271
		ACTIONS => {
			'END' => 305
		}
	},
	{#State 272
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 4,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			"[" => 10,
			'TRY' => 11,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 54,
			'SWITCH' => 55,
			'MACRO' => 19,
			'JAVASCRIPT' => 56,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 69,
			'BLOCK' => 29,
			'DEFAULT' => 71,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'javascript' => 3,
			'loop' => 5,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'defblockname' => 15,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 70,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 72,
			'switch' => 35,
			'try' => 36,
			'directive' => 73,
			'block' => 306,
			'condition' => 75
		}
	},
	{#State 273
		ACTIONS => {
			'IDENT' => -99,
			")" => -99,
			'COMMA' => -99
		},
		DEFAULT => -133
	},
	{#State 274
		ACTIONS => {
			'COMMA' => 309,
			'IDENT' => 307,
			")" => 308
		}
	},
	{#State 275
		DEFAULT => -159,
		GOTOS => {
			'args' => 310
		}
	},
	{#State 276
		DEFAULT => -159,
		GOTOS => {
			'args' => 311
		}
	},
	{#State 277
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 4,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			"[" => 10,
			'TRY' => 11,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 54,
			'SWITCH' => 55,
			'MACRO' => 19,
			'JAVASCRIPT' => 56,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 69,
			'BLOCK' => 29,
			'DEFAULT' => 71,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'javascript' => 3,
			'loop' => 5,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'defblockname' => 15,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 70,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 72,
			'switch' => 35,
			'try' => 36,
			'directive' => 73,
			'block' => 312,
			'condition' => 75
		}
	},
	{#State 278
		DEFAULT => -160
	},
	{#State 279
		ACTIONS => {
			'END' => 313
		}
	},
	{#State 280
		ACTIONS => {
			'ASSIGN' => -163
		},
		DEFAULT => -170
	},
	{#State 281
		ACTIONS => {
			'END' => 314
		}
	},
	{#State 282
		ACTIONS => {
			"+" => 160,
			'CAT' => 166,
			'CMPOP' => 167,
			"?" => 161,
			'DIV' => 162,
			'MOD' => 168,
			"/" => 169,
			'AND' => 163,
			'BINOP' => 164,
			'OR' => 165
		},
		DEFAULT => -127
	},
	{#State 283
		ACTIONS => {
			"+" => 160,
			'CAT' => 166,
			'CMPOP' => 167,
			"?" => 161,
			'DIV' => 162,
			'MOD' => 168,
			"/" => 169,
			'AND' => 163,
			'BINOP' => 164,
			'OR' => 165
		},
		DEFAULT => -126
	},
	{#State 284
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 4,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			"[" => 10,
			'TRY' => 11,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 54,
			'SWITCH' => 55,
			'MACRO' => 19,
			'JAVASCRIPT' => 56,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 69,
			'BLOCK' => 29,
			'DEFAULT' => 71,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'javascript' => 3,
			'loop' => 5,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'defblockname' => 15,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 70,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 72,
			'switch' => 35,
			'try' => 36,
			'directive' => 73,
			'block' => 315,
			'condition' => 75
		}
	},
	{#State 285
		DEFAULT => -132
	},
	{#State 286
		ACTIONS => {
			'END' => 316
		}
	},
	{#State 287
		ACTIONS => {
			'ELSIF' => 295,
			'ELSE' => 293
		},
		DEFAULT => -51,
		GOTOS => {
			'else' => 317
		}
	},
	{#State 288
		ACTIONS => {
			'CASE' => 318
		},
		DEFAULT => -56,
		GOTOS => {
			'case' => 319
		}
	},
	{#State 289
		ACTIONS => {
			'END' => 320
		}
	},
	{#State 290
		ACTIONS => {
			'END' => 321
		}
	},
	{#State 291
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 54,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 322,
			'sterm' => 70,
			'item' => 40,
			'node' => 24,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 292
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 4,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			"[" => 10,
			'TRY' => 11,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 54,
			'SWITCH' => 55,
			'MACRO' => 19,
			'JAVASCRIPT' => 56,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 69,
			'BLOCK' => 29,
			'DEFAULT' => 71,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'javascript' => 3,
			'loop' => 5,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'defblockname' => 15,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 70,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 72,
			'switch' => 35,
			'try' => 36,
			'directive' => 73,
			'block' => 323,
			'condition' => 75
		}
	},
	{#State 293
		ACTIONS => {
			";" => 324
		}
	},
	{#State 294
		ACTIONS => {
			'END' => 325
		}
	},
	{#State 295
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 54,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 326,
			'sterm' => 70,
			'item' => 40,
			'node' => 24,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 296
		DEFAULT => -167
	},
	{#State 297
		ACTIONS => {
			'NOT' => 39,
			"{" => 31,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"(" => 54,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'expr' => 327,
			'sterm' => 70,
			'item' => 40,
			'node' => 24,
			'ident' => 79,
			'term' => 60,
			'lterm' => 58
		}
	},
	{#State 298
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 4,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			"[" => 10,
			'TRY' => 11,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 54,
			'SWITCH' => 55,
			'MACRO' => 19,
			'JAVASCRIPT' => 56,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 69,
			'BLOCK' => 29,
			'DEFAULT' => 71,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'javascript' => 3,
			'loop' => 5,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'defblockname' => 15,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 70,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 72,
			'switch' => 35,
			'try' => 36,
			'directive' => 73,
			'block' => 328,
			'condition' => 75
		}
	},
	{#State 299
		DEFAULT => -68
	},
	{#State 300
		ACTIONS => {
			'DOT' => 177,
			";" => 329
		}
	},
	{#State 301
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 4,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			"[" => 10,
			'TRY' => 11,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 54,
			'SWITCH' => 55,
			'MACRO' => 19,
			'JAVASCRIPT' => 56,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 69,
			'BLOCK' => 29,
			'DEFAULT' => 71,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'javascript' => 3,
			'loop' => 5,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'defblockname' => 15,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 70,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 72,
			'switch' => 35,
			'try' => 36,
			'directive' => 73,
			'block' => 330,
			'condition' => 75
		}
	},
	{#State 302
		ACTIONS => {
			";" => 331
		}
	},
	{#State 303
		DEFAULT => -82
	},
	{#State 304
		ACTIONS => {
			"\"" => 332
		}
	},
	{#State 305
		DEFAULT => -85
	},
	{#State 306
		ACTIONS => {
			'END' => 333
		}
	},
	{#State 307
		DEFAULT => -97
	},
	{#State 308
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 4,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			"[" => 10,
			'TRY' => 11,
			'LAST' => 50,
			'DEBUG' => 52,
			'INCLUDE' => 18,
			"(" => 54,
			'SWITCH' => 55,
			'JAVASCRIPT' => 56,
			'WRAPPER' => 57,
			'FOR' => 22,
			'NEXT' => 23,
			'LITERAL' => 59,
			"\"" => 62,
			'PROCESS' => 63,
			'FILTER' => 26,
			'RETURN' => 66,
			'INSERT' => 67,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 69,
			'BLOCK' => 196,
			'DEFAULT' => 71,
			"{" => 31,
			"\${" => 38
		},
		GOTOS => {
			'item' => 40,
			'javascript' => 3,
			'node' => 24,
			'term' => 60,
			'loop' => 5,
			'expr' => 202,
			'wrapper' => 47,
			'atomexpr' => 49,
			'atomdir' => 13,
			'mdir' => 334,
			'sterm' => 70,
			'filter' => 30,
			'ident' => 151,
			'perl' => 32,
			'setlist' => 72,
			'try' => 36,
			'switch' => 35,
			'assign' => 20,
			'directive' => 199,
			'condition' => 75,
			'lterm' => 58
		}
	},
	{#State 309
		DEFAULT => -98
	},
	{#State 310
		ACTIONS => {
			"{" => 31,
			'COMMA' => 262,
			'LITERAL' => 260,
			'IDENT' => 2,
			"\"" => 62,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		DEFAULT => -63,
		GOTOS => {
			'sterm' => 70,
			'item' => 258,
			'param' => 259,
			'node' => 24,
			'ident' => 257,
			'term' => 261,
			'lterm' => 58
		}
	},
	{#State 311
		ACTIONS => {
			"{" => 31,
			'COMMA' => 262,
			'LITERAL' => 260,
			'IDENT' => 2,
			"\"" => 62,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		DEFAULT => -64,
		GOTOS => {
			'sterm' => 70,
			'item' => 258,
			'param' => 259,
			'node' => 24,
			'ident' => 257,
			'term' => 261,
			'lterm' => 58
		}
	},
	{#State 312
		ACTIONS => {
			'END' => 335
		}
	},
	{#State 313
		DEFAULT => -83
	},
	{#State 314
		DEFAULT => -91
	},
	{#State 315
		ACTIONS => {
			'END' => 336
		}
	},
	{#State 316
		DEFAULT => -80
	},
	{#State 317
		ACTIONS => {
			'END' => 337
		}
	},
	{#State 318
		ACTIONS => {
			";" => 338,
			'DEFAULT' => 340,
			"{" => 31,
			'LITERAL' => 80,
			'IDENT' => 2,
			"\"" => 62,
			"\$" => 44,
			"[" => 10,
			'NUMBER' => 27,
			'REF' => 28,
			"\${" => 38
		},
		GOTOS => {
			'sterm' => 70,
			'item' => 40,
			'node' => 24,
			'ident' => 79,
			'term' => 339,
			'lterm' => 58
		}
	},
	{#State 319
		ACTIONS => {
			'END' => 341
		}
	},
	{#State 320
		DEFAULT => -78
	},
	{#State 321
		DEFAULT => -66
	},
	{#State 322
		ACTIONS => {
			"+" => 160,
			'CAT' => 166,
			'CMPOP' => 167,
			"?" => 161,
			'DIV' => 162,
			'MOD' => 168,
			"/" => 169,
			'AND' => 163,
			'BINOP' => 164,
			'OR' => 165
		},
		DEFAULT => -146
	},
	{#State 323
		ACTIONS => {
			'END' => 342
		}
	},
	{#State 324
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 4,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			"[" => 10,
			'TRY' => 11,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 54,
			'SWITCH' => 55,
			'MACRO' => 19,
			'JAVASCRIPT' => 56,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 69,
			'BLOCK' => 29,
			'DEFAULT' => 71,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'javascript' => 3,
			'loop' => 5,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'defblockname' => 15,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 70,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 72,
			'switch' => 35,
			'try' => 36,
			'directive' => 73,
			'block' => 343,
			'condition' => 75
		}
	},
	{#State 325
		DEFAULT => -47
	},
	{#State 326
		ACTIONS => {
			'CMPOP' => 167,
			"?" => 161,
			";" => 344,
			"+" => 160,
			'MOD' => 168,
			'DIV' => 162,
			"/" => 169,
			'AND' => 163,
			'CAT' => 166,
			'BINOP' => 164,
			'OR' => 165
		}
	},
	{#State 327
		ACTIONS => {
			"+" => 160,
			'CAT' => 166,
			'CMPOP' => 167,
			"?" => 161,
			'DIV' => 162,
			'MOD' => 168,
			"/" => 169,
			'AND' => 163,
			'BINOP' => 164,
			'OR' => 165
		},
		DEFAULT => -157
	},
	{#State 328
		DEFAULT => -72
	},
	{#State 329
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 4,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			"[" => 10,
			'TRY' => 11,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 54,
			'SWITCH' => 55,
			'MACRO' => 19,
			'JAVASCRIPT' => 56,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 69,
			'BLOCK' => 29,
			'DEFAULT' => 71,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'javascript' => 3,
			'loop' => 5,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'defblockname' => 15,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 70,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 72,
			'switch' => 35,
			'try' => 36,
			'directive' => 73,
			'block' => 345,
			'condition' => 75
		}
	},
	{#State 330
		ACTIONS => {
			'FINAL' => 264,
			'CATCH' => 266
		},
		DEFAULT => -73,
		GOTOS => {
			'final' => 346
		}
	},
	{#State 331
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 4,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			"[" => 10,
			'TRY' => 11,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 54,
			'SWITCH' => 55,
			'MACRO' => 19,
			'JAVASCRIPT' => 56,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 69,
			'BLOCK' => 29,
			'DEFAULT' => 71,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'javascript' => 3,
			'loop' => 5,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'defblockname' => 15,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 70,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 72,
			'switch' => 35,
			'try' => 36,
			'directive' => 73,
			'block' => 347,
			'condition' => 75
		}
	},
	{#State 332
		DEFAULT => -104
	},
	{#State 333
		DEFAULT => -96
	},
	{#State 334
		DEFAULT => -93
	},
	{#State 335
		DEFAULT => -58
	},
	{#State 336
		DEFAULT => -76
	},
	{#State 337
		DEFAULT => -45
	},
	{#State 338
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 4,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			"[" => 10,
			'TRY' => 11,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 54,
			'SWITCH' => 55,
			'MACRO' => 19,
			'JAVASCRIPT' => 56,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 69,
			'BLOCK' => 29,
			'DEFAULT' => 71,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'javascript' => 3,
			'loop' => 5,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'defblockname' => 15,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 70,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 72,
			'switch' => 35,
			'try' => 36,
			'directive' => 73,
			'block' => 348,
			'condition' => 75
		}
	},
	{#State 339
		ACTIONS => {
			";" => 349
		}
	},
	{#State 340
		ACTIONS => {
			";" => 350
		}
	},
	{#State 341
		DEFAULT => -52
	},
	{#State 342
		DEFAULT => -61
	},
	{#State 343
		DEFAULT => -50
	},
	{#State 344
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 4,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			"[" => 10,
			'TRY' => 11,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 54,
			'SWITCH' => 55,
			'MACRO' => 19,
			'JAVASCRIPT' => 56,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 69,
			'BLOCK' => 29,
			'DEFAULT' => 71,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'javascript' => 3,
			'loop' => 5,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'defblockname' => 15,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 70,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 72,
			'switch' => 35,
			'try' => 36,
			'directive' => 73,
			'block' => 351,
			'condition' => 75
		}
	},
	{#State 345
		ACTIONS => {
			'FINAL' => 264,
			'CATCH' => 266
		},
		DEFAULT => -73,
		GOTOS => {
			'final' => 352
		}
	},
	{#State 346
		DEFAULT => -71
	},
	{#State 347
		ACTIONS => {
			'FINAL' => 264,
			'CATCH' => 266
		},
		DEFAULT => -73,
		GOTOS => {
			'final' => 353
		}
	},
	{#State 348
		DEFAULT => -55
	},
	{#State 349
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 4,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			"[" => 10,
			'TRY' => 11,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 54,
			'SWITCH' => 55,
			'MACRO' => 19,
			'JAVASCRIPT' => 56,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 69,
			'BLOCK' => 29,
			'DEFAULT' => 71,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'javascript' => 3,
			'loop' => 5,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'defblockname' => 15,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 70,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 72,
			'switch' => 35,
			'try' => 36,
			'directive' => 73,
			'block' => 354,
			'condition' => 75
		}
	},
	{#State 350
		ACTIONS => {
			'SET' => 1,
			'PERL' => 41,
			'NOT' => 39,
			'IDENT' => 2,
			'CLEAR' => 42,
			'UNLESS' => 4,
			'IF' => 45,
			"\$" => 44,
			'STOP' => 7,
			'CALL' => 46,
			'THROW' => 9,
			'GET' => 48,
			"[" => 10,
			'TRY' => 11,
			'LAST' => 50,
			'DEBUG' => 52,
			'RAWPERL' => 14,
			'META' => 16,
			'INCLUDE' => 18,
			"(" => 54,
			'SWITCH' => 55,
			'MACRO' => 19,
			'JAVASCRIPT' => 56,
			'WRAPPER' => 57,
			";" => -18,
			'FOR' => 22,
			'LITERAL' => 59,
			'NEXT' => 23,
			"\"" => 62,
			'TEXT' => 25,
			'PROCESS' => 63,
			'RETURN' => 66,
			'FILTER' => 26,
			'INSERT' => 67,
			'NUMBER' => 27,
			'REF' => 28,
			'WHILE' => 69,
			'BLOCK' => 29,
			'DEFAULT' => 71,
			"{" => 31,
			'USE' => 33,
			'VIEW' => 37,
			"\${" => 38
		},
		DEFAULT => -3,
		GOTOS => {
			'item' => 40,
			'javascript' => 3,
			'loop' => 5,
			'capture' => 43,
			'statement' => 6,
			'view' => 8,
			'wrapper' => 47,
			'atomexpr' => 49,
			'chunk' => 12,
			'atomdir' => 13,
			'anonblock' => 51,
			'defblockname' => 15,
			'ident' => 17,
			'assign' => 20,
			'macro' => 21,
			'lterm' => 58,
			'node' => 24,
			'term' => 60,
			'rawperl' => 61,
			'expr' => 64,
			'use' => 65,
			'defblock' => 68,
			'filter' => 30,
			'sterm' => 70,
			'perl' => 32,
			'chunks' => 34,
			'setlist' => 72,
			'switch' => 35,
			'try' => 36,
			'directive' => 73,
			'block' => 355,
			'condition' => 75
		}
	},
	{#State 351
		ACTIONS => {
			'ELSIF' => 295,
			'ELSE' => 293
		},
		DEFAULT => -51,
		GOTOS => {
			'else' => 356
		}
	},
	{#State 352
		DEFAULT => -69
	},
	{#State 353
		DEFAULT => -70
	},
	{#State 354
		ACTIONS => {
			'CASE' => 318
		},
		DEFAULT => -56,
		GOTOS => {
			'case' => 357
		}
	},
	{#State 355
		DEFAULT => -54
	},
	{#State 356
		DEFAULT => -49
	},
	{#State 357
		DEFAULT => -53
	}
]; 


#========================================================================
# Rules
#========================================================================

$RULES = [
	[#Rule 0
		 '$start', 2, undef
	],
	[#Rule 1
		 'template', 1,
sub
#line 64 "Parser.yp"
{ $factory->template($_[1])           }
	],
	[#Rule 2
		 'block', 1,
sub
#line 67 "Parser.yp"
{ $factory->block($_[1])              }
	],
	[#Rule 3
		 'block', 0,
sub
#line 68 "Parser.yp"
{ $factory->block()                   }
	],
	[#Rule 4
		 'chunks', 2,
sub
#line 71 "Parser.yp"
{ push(@{$_[1]}, $_[2]) 
					if defined $_[2]; $_[1]           }
	],
	[#Rule 5
		 'chunks', 1,
sub
#line 73 "Parser.yp"
{ defined $_[1] ? [ $_[1] ] : [ ]     }
	],
	[#Rule 6
		 'chunk', 1,
sub
#line 76 "Parser.yp"
{ $factory->textblock($_[1])          }
	],
	[#Rule 7
		 'chunk', 2,
sub
#line 77 "Parser.yp"
{ return '' unless $_[1];
                           $_[0]->location() . $_[1];
                         }
	],
	[#Rule 8
		 'statement', 1, undef
	],
	[#Rule 9
		 'statement', 1, undef
	],
	[#Rule 10
		 'statement', 1, undef
	],
	[#Rule 11
		 'statement', 1, undef
	],
	[#Rule 12
		 'statement', 1, undef
	],
	[#Rule 13
		 'statement', 1, undef
	],
	[#Rule 14
		 'statement', 1, undef
	],
	[#Rule 15
		 'statement', 1, undef
	],
	[#Rule 16
		 'statement', 1,
sub
#line 90 "Parser.yp"
{ $factory->get($_[1])                }
	],
	[#Rule 17
		 'statement', 2,
sub
#line 91 "Parser.yp"
{ $_[0]->add_metadata($_[2]);         }
	],
	[#Rule 18
		 'statement', 0, undef
	],
	[#Rule 19
		 'directive', 1,
sub
#line 95 "Parser.yp"
{ $factory->set($_[1])                }
	],
	[#Rule 20
		 'directive', 1, undef
	],
	[#Rule 21
		 'directive', 1, undef
	],
	[#Rule 22
		 'directive', 1, undef
	],
	[#Rule 23
		 'directive', 1, undef
	],
	[#Rule 24
		 'directive', 1, undef
	],
	[#Rule 25
		 'directive', 1, undef
	],
	[#Rule 26
		 'directive', 1, undef
	],
	[#Rule 27
		 'atomexpr', 1,
sub
#line 110 "Parser.yp"
{ $factory->get($_[1])                }
	],
	[#Rule 28
		 'atomexpr', 1, undef
	],
	[#Rule 29
		 'atomdir', 2,
sub
#line 114 "Parser.yp"
{ $factory->get($_[2])                }
	],
	[#Rule 30
		 'atomdir', 2,
sub
#line 115 "Parser.yp"
{ $factory->call($_[2])               }
	],
	[#Rule 31
		 'atomdir', 2,
sub
#line 116 "Parser.yp"
{ $factory->set($_[2])                }
	],
	[#Rule 32
		 'atomdir', 2,
sub
#line 117 "Parser.yp"
{ $factory->default($_[2])            }
	],
	[#Rule 33
		 'atomdir', 2,
sub
#line 118 "Parser.yp"
{ $factory->insert($_[2])             }
	],
	[#Rule 34
		 'atomdir', 2,
sub
#line 119 "Parser.yp"
{ $factory->include($_[2])            }
	],
	[#Rule 35
		 'atomdir', 2,
sub
#line 120 "Parser.yp"
{ $factory->process($_[2])            }
	],
	[#Rule 36
		 'atomdir', 2,
sub
#line 121 "Parser.yp"
{ $factory->throw($_[2])              }
	],
	[#Rule 37
		 'atomdir', 1,
sub
#line 122 "Parser.yp"
{ $factory->return()                  }
	],
	[#Rule 38
		 'atomdir', 1,
sub
#line 123 "Parser.yp"
{ $factory->stop()                    }
	],
	[#Rule 39
		 'atomdir', 1,
sub
#line 124 "Parser.yp"
{ $factory->clear()                   }
	],
	[#Rule 40
		 'atomdir', 1,
sub
#line 125 "Parser.yp"
{ $factory->break()                   }
	],
	[#Rule 41
		 'atomdir', 1,
sub
#line 126 "Parser.yp"
{ $factory->next()                    }
	],
	[#Rule 42
		 'atomdir', 2,
sub
#line 127 "Parser.yp"
{ if ($_[2]->[0]->[0] =~ /^'(on|off)'$/) {
				          $_[0]->{ DEBUG_DIRS } = ($1 eq 'on');
					  $factory->debug($_[2]);
				      }
				      else {
					  $_[0]->{ DEBUG_DIRS } ? $factory->debug($_[2]) : '';
				      }
				    }
	],
	[#Rule 43
		 'atomdir', 1, undef
	],
	[#Rule 44
		 'atomdir', 1, undef
	],
	[#Rule 45
		 'condition', 6,
sub
#line 140 "Parser.yp"
{ $factory->if(@_[2, 4, 5])           }
	],
	[#Rule 46
		 'condition', 3,
sub
#line 141 "Parser.yp"
{ $factory->if(@_[3, 1])              }
	],
	[#Rule 47
		 'condition', 6,
sub
#line 143 "Parser.yp"
{ $factory->if("!($_[2])", @_[4, 5])  }
	],
	[#Rule 48
		 'condition', 3,
sub
#line 144 "Parser.yp"
{ $factory->if("!($_[3])", $_[1])     }
	],
	[#Rule 49
		 'else', 5,
sub
#line 148 "Parser.yp"
{ unshift(@{$_[5]}, [ @_[2, 4] ]);
				      $_[5];                              }
	],
	[#Rule 50
		 'else', 3,
sub
#line 150 "Parser.yp"
{ [ $_[3] ]                           }
	],
	[#Rule 51
		 'else', 0,
sub
#line 151 "Parser.yp"
{ [ undef ]                           }
	],
	[#Rule 52
		 'switch', 6,
sub
#line 155 "Parser.yp"
{ $factory->switch(@_[2, 5])          }
	],
	[#Rule 53
		 'case', 5,
sub
#line 159 "Parser.yp"
{ unshift(@{$_[5]}, [ @_[2, 4] ]); 
				      $_[5];                              }
	],
	[#Rule 54
		 'case', 4,
sub
#line 161 "Parser.yp"
{ [ $_[4] ]                           }
	],
	[#Rule 55
		 'case', 3,
sub
#line 162 "Parser.yp"
{ [ $_[3] ]                           }
	],
	[#Rule 56
		 'case', 0,
sub
#line 163 "Parser.yp"
{ [ undef ]                           }
	],
	[#Rule 57
		 '@1-3', 0,
sub
#line 166 "Parser.yp"
{ $_[0]->{ INFOR }++                  }
	],
	[#Rule 58
		 'loop', 6,
sub
#line 167 "Parser.yp"
{ $_[0]->{ INFOR }--;
				      $factory->foreach(@{$_[2]}, $_[5])  }
	],
	[#Rule 59
		 'loop', 3,
sub
#line 171 "Parser.yp"
{ $factory->foreach(@{$_[3]}, $_[1])  }
	],
	[#Rule 60
		 '@2-3', 0,
sub
#line 172 "Parser.yp"
{ $_[0]->{ INWHILE }++                }
	],
	[#Rule 61
		 'loop', 6,
sub
#line 173 "Parser.yp"
{ $_[0]->{ INWHILE }--;
                                      $factory->while(@_[2, 5])           }
	],
	[#Rule 62
		 'loop', 3,
sub
#line 175 "Parser.yp"
{ $factory->while(@_[3, 1])           }
	],
	[#Rule 63
		 'loopvar', 4,
sub
#line 178 "Parser.yp"
{ [ @_[1, 3, 4] ]                     }
	],
	[#Rule 64
		 'loopvar', 4,
sub
#line 179 "Parser.yp"
{ [ @_[1, 3, 4] ]                     }
	],
	[#Rule 65
		 'loopvar', 2,
sub
#line 180 "Parser.yp"
{ [ 0, @_[1, 2] ]                     }
	],
	[#Rule 66
		 'wrapper', 5,
sub
#line 184 "Parser.yp"
{ $factory->wrapper(@_[2, 4])         }
	],
	[#Rule 67
		 'wrapper', 3,
sub
#line 186 "Parser.yp"
{ $factory->wrapper(@_[3, 1])         }
	],
	[#Rule 68
		 'try', 5,
sub
#line 190 "Parser.yp"
{ $factory->try(@_[3, 4])             }
	],
	[#Rule 69
		 'final', 5,
sub
#line 194 "Parser.yp"
{ unshift(@{$_[5]}, [ @_[2,4] ]);
				      $_[5];                              }
	],
	[#Rule 70
		 'final', 5,
sub
#line 197 "Parser.yp"
{ unshift(@{$_[5]}, [ undef, $_[4] ]);
				      $_[5];                              }
	],
	[#Rule 71
		 'final', 4,
sub
#line 200 "Parser.yp"
{ unshift(@{$_[4]}, [ undef, $_[3] ]);
				      $_[4];                              }
	],
	[#Rule 72
		 'final', 3,
sub
#line 202 "Parser.yp"
{ [ $_[3] ]                           }
	],
	[#Rule 73
		 'final', 0,
sub
#line 203 "Parser.yp"
{ [ 0 ] }
	],
	[#Rule 74
		 'use', 2,
sub
#line 206 "Parser.yp"
{ $factory->use($_[2])                }
	],
	[#Rule 75
		 '@3-3', 0,
sub
#line 209 "Parser.yp"
{ $_[0]->push_defblock();		  }
	],
	[#Rule 76
		 'view', 6,
sub
#line 210 "Parser.yp"
{ $factory->view(@_[2,5], 
						     $_[0]->pop_defblock) }
	],
	[#Rule 77
		 '@4-2', 0,
sub
#line 214 "Parser.yp"
{ ${$_[0]->{ INJAVASCRIPT }}++;             }
	],
	[#Rule 78
		 'javascript', 5,
sub
#line 215 "Parser.yp"
{ ${$_[0]->{ INJAVASCRIPT }}--;
				      $_[0]->{ EVAL_JAVASCRIPT } 
				      ? $factory->javascript($_[4])             
				      : $factory->no_javascript();              }
	],
	[#Rule 79
		 '@5-2', 0,
sub
#line 221 "Parser.yp"
{ ${$_[0]->{ INPERL }}++;             }
	],
	[#Rule 80
		 'perl', 5,
sub
#line 222 "Parser.yp"
{ ${$_[0]->{ INPERL }}--;
				      $_[0]->{ EVAL_PERL } 
				      ? $factory->perl($_[4])             
				      : $factory->no_perl();              }
	],
	[#Rule 81
		 '@6-1', 0,
sub
#line 228 "Parser.yp"
{ ${$_[0]->{ INPERL }}++; 
				      $rawstart = ${$_[0]->{'LINE'}};     }
	],
	[#Rule 82
		 'rawperl', 5,
sub
#line 230 "Parser.yp"
{ ${$_[0]->{ INPERL }}--;
				      $_[0]->{ EVAL_PERL } 
				      ? $factory->rawperl($_[4], $rawstart)
				      : $factory->no_perl();              }
	],
	[#Rule 83
		 'filter', 5,
sub
#line 237 "Parser.yp"
{ $factory->filter(@_[2,4])           }
	],
	[#Rule 84
		 'filter', 3,
sub
#line 239 "Parser.yp"
{ $factory->filter(@_[3,1])           }
	],
	[#Rule 85
		 'defblock', 5,
sub
#line 244 "Parser.yp"
{ my $name = join('/', @{ $_[0]->{ DEFBLOCKS } });
				      pop(@{ $_[0]->{ DEFBLOCKS } });
				      $_[0]->define_block($name, $_[4]); 
				      undef
				    }
	],
	[#Rule 86
		 'defblockname', 2,
sub
#line 251 "Parser.yp"
{ push(@{ $_[0]->{ DEFBLOCKS } }, $_[2]);
				      $_[2];
				    }
	],
	[#Rule 87
		 'blockname', 1, undef
	],
	[#Rule 88
		 'blockname', 1,
sub
#line 257 "Parser.yp"
{ $_[1] =~ s/^'(.*)'$/$1/; $_[1]      }
	],
	[#Rule 89
		 'blockargs', 1, undef
	],
	[#Rule 90
		 'blockargs', 0, undef
	],
	[#Rule 91
		 'anonblock', 5,
sub
#line 265 "Parser.yp"
{ local $" = ', ';
				      print STDERR "experimental block args: [@{ $_[2] }]\n"
					  if $_[2];
				      $factory->anon_block($_[4])         }
	],
	[#Rule 92
		 'capture', 3,
sub
#line 271 "Parser.yp"
{ $factory->capture(@_[1, 3])         }
	],
	[#Rule 93
		 'macro', 6,
sub
#line 275 "Parser.yp"
{ $factory->macro(@_[2, 6, 4])        }
	],
	[#Rule 94
		 'macro', 3,
sub
#line 276 "Parser.yp"
{ $factory->macro(@_[2, 3])           }
	],
	[#Rule 95
		 'mdir', 1, undef
	],
	[#Rule 96
		 'mdir', 4,
sub
#line 280 "Parser.yp"
{ $_[3]                               }
	],
	[#Rule 97
		 'margs', 2,
sub
#line 283 "Parser.yp"
{ push(@{$_[1]}, $_[2]); $_[1]        }
	],
	[#Rule 98
		 'margs', 2,
sub
#line 284 "Parser.yp"
{ $_[1]                               }
	],
	[#Rule 99
		 'margs', 1,
sub
#line 285 "Parser.yp"
{ [ $_[1] ]                           }
	],
	[#Rule 100
		 'metadata', 2,
sub
#line 288 "Parser.yp"
{ push(@{$_[1]}, @{$_[2]}); $_[1]     }
	],
	[#Rule 101
		 'metadata', 2, undef
	],
	[#Rule 102
		 'metadata', 1, undef
	],
	[#Rule 103
		 'meta', 3,
sub
#line 293 "Parser.yp"
{ for ($_[3]) { s/^'//; s/'$//; 
						       s/\\'/'/g  }; 
					 [ @_[1,3] ] }
	],
	[#Rule 104
		 'meta', 5,
sub
#line 296 "Parser.yp"
{ [ @_[1,4] ] }
	],
	[#Rule 105
		 'meta', 3,
sub
#line 297 "Parser.yp"
{ [ @_[1,3] ] }
	],
	[#Rule 106
		 'term', 1, undef
	],
	[#Rule 107
		 'term', 1, undef
	],
	[#Rule 108
		 'lterm', 3,
sub
#line 309 "Parser.yp"
{ "[ $_[2] ]"                         }
	],
	[#Rule 109
		 'lterm', 3,
sub
#line 310 "Parser.yp"
{ "[ $_[2] ]"                         }
	],
	[#Rule 110
		 'lterm', 2,
sub
#line 311 "Parser.yp"
{ "[ ]"                               }
	],
	[#Rule 111
		 'lterm', 3,
sub
#line 312 "Parser.yp"
{ "{ $_[2]  }"                        }
	],
	[#Rule 112
		 'sterm', 1,
sub
#line 315 "Parser.yp"
{ $factory->ident($_[1])              }
	],
	[#Rule 113
		 'sterm', 2,
sub
#line 316 "Parser.yp"
{ $factory->identref($_[2])           }
	],
	[#Rule 114
		 'sterm', 3,
sub
#line 317 "Parser.yp"
{ $factory->quoted($_[2])             }
	],
	[#Rule 115
		 'sterm', 1, undef
	],
	[#Rule 116
		 'sterm', 1, undef
	],
	[#Rule 117
		 'list', 2,
sub
#line 322 "Parser.yp"
{ "$_[1], $_[2]"                      }
	],
	[#Rule 118
		 'list', 2, undef
	],
	[#Rule 119
		 'list', 1, undef
	],
	[#Rule 120
		 'range', 3,
sub
#line 327 "Parser.yp"
{ $_[1] . '..' . $_[3]                }
	],
	[#Rule 121
		 'hash', 1, undef
	],
	[#Rule 122
		 'hash', 0,
sub
#line 332 "Parser.yp"
{ "" }
	],
	[#Rule 123
		 'params', 2,
sub
#line 335 "Parser.yp"
{ "$_[1], $_[2]"                      }
	],
	[#Rule 124
		 'params', 2, undef
	],
	[#Rule 125
		 'params', 1, undef
	],
	[#Rule 126
		 'param', 3,
sub
#line 340 "Parser.yp"
{ "$_[1]: $_[3]"                    }
	],
	[#Rule 127
		 'param', 3,
sub
#line 341 "Parser.yp"
{ "$_[1]: $_[3]"                    }
	],
	[#Rule 128
		 'ident', 3,
sub
#line 344 "Parser.yp"
{ push(@{$_[1]}, @{$_[3]}); $_[1]     }
	],
	[#Rule 129
		 'ident', 3,
sub
#line 345 "Parser.yp"
{ push(@{$_[1]}, 
					   map {($_, 0)} split(/\./, $_[3]));
				      $_[1];			          }
	],
	[#Rule 130
		 'ident', 1, undef
	],
	[#Rule 131
		 'node', 1,
sub
#line 351 "Parser.yp"
{ [ $_[1], 0 ]                        }
	],
	[#Rule 132
		 'node', 4,
sub
#line 352 "Parser.yp"
{ [ $_[1], $factory->args($_[3]) ]    }
	],
	[#Rule 133
		 'item', 1,
sub
#line 355 "Parser.yp"
{ "'$_[1]'"                           }
	],
	[#Rule 134
		 'item', 3,
sub
#line 356 "Parser.yp"
{ $_[2]                               }
	],
	[#Rule 135
		 'item', 2,
sub
#line 357 "Parser.yp"
{ $_[0]->{ V1DOLLAR }
				       ? "'$_[2]'" 
				       : $factory->ident(["'$_[2]'", 0])  }
	],
	[#Rule 136
		 'expr', 3,
sub
#line 362 "Parser.yp"
{ "$_[1] $_[2] $_[3]"                 }
	],
	[#Rule 137
		 'expr', 3,
sub
#line 363 "Parser.yp"
{ "$_[1] $_[2] $_[3]"                 }
	],
	[#Rule 138
		 'expr', 3,
sub
#line 364 "Parser.yp"
{ "$_[1] $_[2] $_[3]"                 }
	],
	[#Rule 139
		 'expr', 3,
sub
#line 365 "Parser.yp"
{ "int($_[1] / $_[3])"                }
	],
	[#Rule 140
		 'expr', 3,
sub
#line 366 "Parser.yp"
{ "$_[1] % $_[3]"                     }
	],
	[#Rule 141
		 'expr', 3,
sub
#line 367 "Parser.yp"
{ "$_[1] $CMPOP{ $_[2] } $_[3]"       }
	],
	[#Rule 142
		 'expr', 3,
sub
#line 368 "Parser.yp"
{ "$_[1]  . $_[3]"                    }
	],
	[#Rule 143
		 'expr', 3,
sub
#line 369 "Parser.yp"
{ "$_[1] && $_[3]"                    }
	],
	[#Rule 144
		 'expr', 3,
sub
#line 370 "Parser.yp"
{ "$_[1] || $_[3]"                    }
	],
	[#Rule 145
		 'expr', 2,
sub
#line 371 "Parser.yp"
{ "! $_[2]"                           }
	],
	[#Rule 146
		 'expr', 5,
sub
#line 372 "Parser.yp"
{ "$_[1] ? $_[3] : $_[5]"             }
	],
	[#Rule 147
		 'expr', 3,
sub
#line 373 "Parser.yp"
{ $factory->assign(@{$_[2]})          }
	],
	[#Rule 148
		 'expr', 3,
sub
#line 374 "Parser.yp"
{ "($_[2])"                           }
	],
	[#Rule 149
		 'expr', 1, undef
	],
	[#Rule 150
		 'setlist', 2,
sub
#line 378 "Parser.yp"
{ push(@{$_[1]}, @{$_[2]}); $_[1]     }
	],
	[#Rule 151
		 'setlist', 2, undef
	],
	[#Rule 152
		 'setlist', 1, undef
	],
	[#Rule 153
		 'assign', 3,
sub
#line 384 "Parser.yp"
{ [ $_[1], $_[3] ]                    }
	],
	[#Rule 154
		 'assign', 3,
sub
#line 385 "Parser.yp"
{ [ @_[1,3] ]                         }
	],
	[#Rule 155
		 'args', 2,
sub
#line 392 "Parser.yp"
{ push(@{$_[1]}, $_[2]); $_[1]        }
	],
	[#Rule 156
		 'args', 2,
sub
#line 393 "Parser.yp"
{ push(@{$_[1]->[0]}, $_[2]); $_[1]   }
	],
	[#Rule 157
		 'args', 4,
sub
#line 394 "Parser.yp"
{ push(@{$_[1]->[0]}, "'', " . 
				      $factory->assign(@_[2,4])); $_[1]  }
	],
	[#Rule 158
		 'args', 2,
sub
#line 396 "Parser.yp"
{ $_[1]                               }
	],
	[#Rule 159
		 'args', 0,
sub
#line 397 "Parser.yp"
{ [ [ ] ]                             }
	],
	[#Rule 160
		 'lnameargs', 3,
sub
#line 407 "Parser.yp"
{ push(@{$_[3]}, $_[1]); $_[3]        }
	],
	[#Rule 161
		 'lnameargs', 1, undef
	],
	[#Rule 162
		 'lvalue', 1, undef
	],
	[#Rule 163
		 'lvalue', 3,
sub
#line 412 "Parser.yp"
{ $factory->quoted($_[2])             }
	],
	[#Rule 164
		 'lvalue', 1, undef
	],
	[#Rule 165
		 'nameargs', 3,
sub
#line 416 "Parser.yp"
{ [ [$factory->ident($_[2])], $_[3] ]   }
	],
	[#Rule 166
		 'nameargs', 2,
sub
#line 417 "Parser.yp"
{ [ @_[1,2] ] }
	],
	[#Rule 167
		 'nameargs', 4,
sub
#line 418 "Parser.yp"
{ [ @_[1,3] ] }
	],
	[#Rule 168
		 'names', 3,
sub
#line 421 "Parser.yp"
{ push(@{$_[1]}, $_[3]); $_[1] }
	],
	[#Rule 169
		 'names', 1,
sub
#line 422 "Parser.yp"
{ [ $_[1] ]                    }
	],
	[#Rule 170
		 'name', 3,
sub
#line 425 "Parser.yp"
{ $factory->quoted($_[2])  }
	],
	[#Rule 171
		 'name', 1,
sub
#line 426 "Parser.yp"
{ "'$_[1]'" }
	],
	[#Rule 172
		 'name', 1, undef
	],
	[#Rule 173
		 'filename', 3,
sub
#line 438 "Parser.yp"
{ "$_[1].$_[3]" }
	],
	[#Rule 174
		 'filename', 1, undef
	],
	[#Rule 175
		 'filepart', 1, undef
	],
	[#Rule 176
		 'filepart', 1, undef
	],
	[#Rule 177
		 'filepart', 1, undef
	],
	[#Rule 178
		 'quoted', 2,
sub
#line 452 "Parser.yp"
{ push(@{$_[1]}, $_[2]) 
				          if defined $_[2]; $_[1]         }
	],
	[#Rule 179
		 'quoted', 0,
sub
#line 454 "Parser.yp"
{ [ ]                                 }
	],
	[#Rule 180
		 'quotable', 1,
sub
#line 457 "Parser.yp"
{ $factory->ident($_[1])              }
	],
	[#Rule 181
		 'quotable', 1,
sub
#line 458 "Parser.yp"
{ $factory->text($_[1])               }
	],
	[#Rule 182
		 'quotable', 1,
sub
#line 459 "Parser.yp"
{ undef                               }
	]
];

1;
